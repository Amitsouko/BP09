<?php

namespace Bp\ProductBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{

  public function findPagination($offset = 0, $limit = 20)
  {
      return $this->getEntityManager()
                 ->createQuery('SELECT p.id, p.reference, p.name, p.description, f.path, p.price, p.taxe, b.name as brand FROM BpProductBundle:Product p
                                LEFT JOIN p.mainPhoto f
                                LEFT JOIN p.brand b
                                 WHERE p.active = :active
                            ')
                 ->setParameters(array(
                     'active' => true
                 ))
                 ->setFirstResult($offset)
                 ->setMaxResults($limit)
                 ->getArrayResult();
  }

    public function findOneActiveById($id)
     {
         return $this->getEntityManager()
             ->createQuery('SELECT p FROM BpProductBundle:Product p
           
                             WHERE p.id = :id 
                             AND p.active = :active
                        ')
             ->setParameters(array(
                 'id' => $id,
                 'active' => true
             ))
             ->getSingleResult();
     }

     public function findOneLikeRef($ref)
      {
          return $this->getEntityManager()
              ->createQuery('SELECT p FROM BpProductBundle:Product p
            
                              WHERE p.reference LIKE :ref
                         ')
              ->setParameters(array(
                  'ref' => "%$ref%"
              ))
              ->getResult();
      }

      public function findOnHome($limit = 5)
       {
           return $this->getEntityManager()
               ->createQuery('SELECT p FROM BpProductBundle:Product p
             
                               WHERE p.onHome = :onHome
                          ')
               ->setMaxResults($limit)
               ->setParameters(array(
                   'onHome' => true
               ))
               ->getResult();
       }
}
